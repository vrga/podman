---
- name: install podman
  include_tasks: install.yml
  tags:
    - podman
    - install

- name:   set up /etc/containers
  file:
    name:  /etc/containers
    owner: root
    group: root
    state: directory
  become: yes
  tags:
    - podman
    - configure

- name: set up policy.json
  copy:
    dest:    /etc/containers/policy.json
    content: "{{ containers_policy | to_nice_json }}"
    owner: root
    group: root
    mode:  '0644'
  tags:
    - podman
    - configure

- name: set up registries.conf
  copy:
    dest: /etc/containers/registries.conf
    content: "{{ _registries | to_toml }}"
    owner: root
    group: root
    mode: '0644'
  tags:
    - podman
    - configure

- name: set up storage.conf
  copy:
    dest: /etc/containers/storage.conf
    content: "{{ container_storage_conf | default(container_storage_conf_default) | to_toml }}"
    owner: root
    group: root
    mode:  '0644'
  tags:
    - podman
    - configure

- name: set up containers.conf
  copy:
    dest: /etc/containers/containers.conf
    content: "{{ containers_conf | default(containers_conf_default) | to_toml }}"
    owner: root
    group: root
    mode:  '0644'
  tags:
    - podman
    - configure

- name:       set up cni networking configs
  copy:
    dest:    "/etc/cni/net.d/{{ item.filename }}.conflist"
    content: "{{ item.data | to_nice_json }}"
    owner: root
    group: root
    mode:  '0644'
  with_items: "{{ cni_networking }}"
  when: podman_networking == "cni"
  tags:
    - podman
    - configure

- name: set up netavark networking configs
  copy:
    dest:    "/etc/containers/networks/{{ item.data.name }}.json"
    content: "{{ item.data | to_nice_json }}"
    owner:   root
    group:   root
    mode:    '0644'
  with_items: "{{ netavark_networking }}"
  when:       podman_networking == "netavark"
  tags:
    - podman
    - configure

- name: set up required dir.
  file:
    path:  "{{ storage_root }}"
    owner: root
    group: root
    state: directory
  tags:
    - podman
    - configure
